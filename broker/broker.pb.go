// Code generated by protoc-gen-go. DO NOT EDIT.
// source: broker/broker.proto

/*
Package ProtobufBroker is a generated protocol buffer package.

It is generated from these files:
	broker/broker.proto
	broker/private.proto

It has these top-level messages:
	BrokerSessionMessage
	PlaceOrderRequest
	PlaceOrderResult
	CancelOrderRequest
	CancelOrderResult
	ReplaceOrderRequest
	ClosePositionRequest
	SyncRequest
	BrokerRequest
	OrdersUpdate
	TradesUpdate
	PositionsUpdate
	BalancesUpdate
	RequestResolutionUpdate
	AnonymousSessionStatusUpdate
	SessionStatusUpdate
	PermissionsUpdate
	APIAccessorStatusUpdate
	BrokerUpdateMessage
	PrivateOrder
	PrivateTrade
	PrivatePosition
	Balance
	Balances
*/
package ProtobufBroker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import ProtobufStream "code.cryptowat.ch/proto/stream"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BrokerSessionMessage struct {
	// Types that are valid to be assigned to SessionConfig:
	//	*BrokerSessionMessage_Session_
	//	*BrokerSessionMessage_AnonymousTradingSession_
	SessionConfig isBrokerSessionMessage_SessionConfig `protobuf_oneof:"SessionConfig"`
	MarketId      int64                                `protobuf:"varint,3,opt,name=marketId" json:"marketId,omitempty"`
}

func (m *BrokerSessionMessage) Reset()                    { *m = BrokerSessionMessage{} }
func (m *BrokerSessionMessage) String() string            { return proto.CompactTextString(m) }
func (*BrokerSessionMessage) ProtoMessage()               {}
func (*BrokerSessionMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isBrokerSessionMessage_SessionConfig interface {
	isBrokerSessionMessage_SessionConfig()
}

type BrokerSessionMessage_Session_ struct {
	Session *BrokerSessionMessage_Session `protobuf:"bytes,1,opt,name=session,oneof"`
}
type BrokerSessionMessage_AnonymousTradingSession_ struct {
	AnonymousTradingSession *BrokerSessionMessage_AnonymousTradingSession `protobuf:"bytes,2,opt,name=anonymousTradingSession,oneof"`
}

func (*BrokerSessionMessage_Session_) isBrokerSessionMessage_SessionConfig()                 {}
func (*BrokerSessionMessage_AnonymousTradingSession_) isBrokerSessionMessage_SessionConfig() {}

func (m *BrokerSessionMessage) GetSessionConfig() isBrokerSessionMessage_SessionConfig {
	if m != nil {
		return m.SessionConfig
	}
	return nil
}

func (m *BrokerSessionMessage) GetSession() *BrokerSessionMessage_Session {
	if x, ok := m.GetSessionConfig().(*BrokerSessionMessage_Session_); ok {
		return x.Session
	}
	return nil
}

func (m *BrokerSessionMessage) GetAnonymousTradingSession() *BrokerSessionMessage_AnonymousTradingSession {
	if x, ok := m.GetSessionConfig().(*BrokerSessionMessage_AnonymousTradingSession_); ok {
		return x.AnonymousTradingSession
	}
	return nil
}

func (m *BrokerSessionMessage) GetMarketId() int64 {
	if m != nil {
		return m.MarketId
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BrokerSessionMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BrokerSessionMessage_OneofMarshaler, _BrokerSessionMessage_OneofUnmarshaler, _BrokerSessionMessage_OneofSizer, []interface{}{
		(*BrokerSessionMessage_Session_)(nil),
		(*BrokerSessionMessage_AnonymousTradingSession_)(nil),
	}
}

func _BrokerSessionMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BrokerSessionMessage)
	// SessionConfig
	switch x := m.SessionConfig.(type) {
	case *BrokerSessionMessage_Session_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Session); err != nil {
			return err
		}
	case *BrokerSessionMessage_AnonymousTradingSession_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AnonymousTradingSession); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BrokerSessionMessage.SessionConfig has unexpected type %T", x)
	}
	return nil
}

func _BrokerSessionMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BrokerSessionMessage)
	switch tag {
	case 1: // SessionConfig.session
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BrokerSessionMessage_Session)
		err := b.DecodeMessage(msg)
		m.SessionConfig = &BrokerSessionMessage_Session_{msg}
		return true, err
	case 2: // SessionConfig.anonymousTradingSession
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BrokerSessionMessage_AnonymousTradingSession)
		err := b.DecodeMessage(msg)
		m.SessionConfig = &BrokerSessionMessage_AnonymousTradingSession_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BrokerSessionMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BrokerSessionMessage)
	// SessionConfig
	switch x := m.SessionConfig.(type) {
	case *BrokerSessionMessage_Session_:
		s := proto.Size(x.Session)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerSessionMessage_AnonymousTradingSession_:
		s := proto.Size(x.AnonymousTradingSession)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BrokerSessionMessage_Session struct {
	UserId   string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	Expires  int64  `protobuf:"varint,2,opt,name=expires" json:"expires,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	MfaToken string `protobuf:"bytes,4,opt,name=mfaToken" json:"mfaToken,omitempty"`
}

func (m *BrokerSessionMessage_Session) Reset()                    { *m = BrokerSessionMessage_Session{} }
func (m *BrokerSessionMessage_Session) String() string            { return proto.CompactTextString(m) }
func (*BrokerSessionMessage_Session) ProtoMessage()               {}
func (*BrokerSessionMessage_Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *BrokerSessionMessage_Session) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *BrokerSessionMessage_Session) GetExpires() int64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func (m *BrokerSessionMessage_Session) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *BrokerSessionMessage_Session) GetMfaToken() string {
	if m != nil {
		return m.MfaToken
	}
	return ""
}

type BrokerSessionMessage_AnonymousTradingSession struct {
	Exchange   string `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Expiration int64  `protobuf:"varint,3,opt,name=expiration" json:"expiration,omitempty"`
}

func (m *BrokerSessionMessage_AnonymousTradingSession) Reset() {
	*m = BrokerSessionMessage_AnonymousTradingSession{}
}
func (m *BrokerSessionMessage_AnonymousTradingSession) String() string {
	return proto.CompactTextString(m)
}
func (*BrokerSessionMessage_AnonymousTradingSession) ProtoMessage() {}
func (*BrokerSessionMessage_AnonymousTradingSession) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 1}
}

func (m *BrokerSessionMessage_AnonymousTradingSession) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *BrokerSessionMessage_AnonymousTradingSession) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *BrokerSessionMessage_AnonymousTradingSession) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

type PlaceOrderRequest struct {
	Order        *PrivateOrder `protobuf:"bytes,2,opt,name=order" json:"order,omitempty"`
	ClosingOrder *PrivateOrder `protobuf:"bytes,3,opt,name=closingOrder" json:"closingOrder,omitempty"`
}

func (m *PlaceOrderRequest) Reset()                    { *m = PlaceOrderRequest{} }
func (m *PlaceOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*PlaceOrderRequest) ProtoMessage()               {}
func (*PlaceOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlaceOrderRequest) GetOrder() *PrivateOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *PlaceOrderRequest) GetClosingOrder() *PrivateOrder {
	if m != nil {
		return m.ClosingOrder
	}
	return nil
}

type PlaceOrderResult struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *PlaceOrderResult) Reset()                    { *m = PlaceOrderResult{} }
func (m *PlaceOrderResult) String() string            { return proto.CompactTextString(m) }
func (*PlaceOrderResult) ProtoMessage()               {}
func (*PlaceOrderResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlaceOrderResult) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type CancelOrderRequest struct {
	OrderId string `protobuf:"bytes,2,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *CancelOrderRequest) Reset()                    { *m = CancelOrderRequest{} }
func (m *CancelOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CancelOrderRequest) ProtoMessage()               {}
func (*CancelOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CancelOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type CancelOrderResult struct {
	OrderId string `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *CancelOrderResult) Reset()                    { *m = CancelOrderResult{} }
func (m *CancelOrderResult) String() string            { return proto.CompactTextString(m) }
func (*CancelOrderResult) ProtoMessage()               {}
func (*CancelOrderResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CancelOrderResult) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ReplaceOrderRequest struct {
	OrderId                 string        `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	Replacement             *PrivateOrder `protobuf:"bytes,2,opt,name=replacement" json:"replacement,omitempty"`
	ReplacementClosingOrder *PrivateOrder `protobuf:"bytes,3,opt,name=replacementClosingOrder" json:"replacementClosingOrder,omitempty"`
}

func (m *ReplaceOrderRequest) Reset()                    { *m = ReplaceOrderRequest{} }
func (m *ReplaceOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ReplaceOrderRequest) ProtoMessage()               {}
func (*ReplaceOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReplaceOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ReplaceOrderRequest) GetReplacement() *PrivateOrder {
	if m != nil {
		return m.Replacement
	}
	return nil
}

func (m *ReplaceOrderRequest) GetReplacementClosingOrder() *PrivateOrder {
	if m != nil {
		return m.ReplacementClosingOrder
	}
	return nil
}

type ClosePositionRequest struct {
	PositionId string `protobuf:"bytes,2,opt,name=positionId" json:"positionId,omitempty"`
}

func (m *ClosePositionRequest) Reset()                    { *m = ClosePositionRequest{} }
func (m *ClosePositionRequest) String() string            { return proto.CompactTextString(m) }
func (*ClosePositionRequest) ProtoMessage()               {}
func (*ClosePositionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ClosePositionRequest) GetPositionId() string {
	if m != nil {
		return m.PositionId
	}
	return ""
}

type SyncRequest struct {
}

func (m *SyncRequest) Reset()                    { *m = SyncRequest{} }
func (m *SyncRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()               {}
func (*SyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type BrokerRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Types that are valid to be assigned to Request:
	//	*BrokerRequest_PlaceOrderRequest
	//	*BrokerRequest_CancelOrderRequest
	//	*BrokerRequest_ReplaceOrderRequest
	//	*BrokerRequest_SyncRequest
	//	*BrokerRequest_ClosePositionRequest
	Request isBrokerRequest_Request `protobuf_oneof:"Request"`
}

func (m *BrokerRequest) Reset()                    { *m = BrokerRequest{} }
func (m *BrokerRequest) String() string            { return proto.CompactTextString(m) }
func (*BrokerRequest) ProtoMessage()               {}
func (*BrokerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type isBrokerRequest_Request interface {
	isBrokerRequest_Request()
}

type BrokerRequest_PlaceOrderRequest struct {
	PlaceOrderRequest *PlaceOrderRequest `protobuf:"bytes,2,opt,name=placeOrderRequest,oneof"`
}
type BrokerRequest_CancelOrderRequest struct {
	CancelOrderRequest *CancelOrderRequest `protobuf:"bytes,3,opt,name=cancelOrderRequest,oneof"`
}
type BrokerRequest_ReplaceOrderRequest struct {
	ReplaceOrderRequest *ReplaceOrderRequest `protobuf:"bytes,6,opt,name=replaceOrderRequest,oneof"`
}
type BrokerRequest_SyncRequest struct {
	SyncRequest *SyncRequest `protobuf:"bytes,4,opt,name=syncRequest,oneof"`
}
type BrokerRequest_ClosePositionRequest struct {
	ClosePositionRequest *ClosePositionRequest `protobuf:"bytes,5,opt,name=closePositionRequest,oneof"`
}

func (*BrokerRequest_PlaceOrderRequest) isBrokerRequest_Request()    {}
func (*BrokerRequest_CancelOrderRequest) isBrokerRequest_Request()   {}
func (*BrokerRequest_ReplaceOrderRequest) isBrokerRequest_Request()  {}
func (*BrokerRequest_SyncRequest) isBrokerRequest_Request()          {}
func (*BrokerRequest_ClosePositionRequest) isBrokerRequest_Request() {}

func (m *BrokerRequest) GetRequest() isBrokerRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *BrokerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BrokerRequest) GetPlaceOrderRequest() *PlaceOrderRequest {
	if x, ok := m.GetRequest().(*BrokerRequest_PlaceOrderRequest); ok {
		return x.PlaceOrderRequest
	}
	return nil
}

func (m *BrokerRequest) GetCancelOrderRequest() *CancelOrderRequest {
	if x, ok := m.GetRequest().(*BrokerRequest_CancelOrderRequest); ok {
		return x.CancelOrderRequest
	}
	return nil
}

func (m *BrokerRequest) GetReplaceOrderRequest() *ReplaceOrderRequest {
	if x, ok := m.GetRequest().(*BrokerRequest_ReplaceOrderRequest); ok {
		return x.ReplaceOrderRequest
	}
	return nil
}

func (m *BrokerRequest) GetSyncRequest() *SyncRequest {
	if x, ok := m.GetRequest().(*BrokerRequest_SyncRequest); ok {
		return x.SyncRequest
	}
	return nil
}

func (m *BrokerRequest) GetClosePositionRequest() *ClosePositionRequest {
	if x, ok := m.GetRequest().(*BrokerRequest_ClosePositionRequest); ok {
		return x.ClosePositionRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BrokerRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BrokerRequest_OneofMarshaler, _BrokerRequest_OneofUnmarshaler, _BrokerRequest_OneofSizer, []interface{}{
		(*BrokerRequest_PlaceOrderRequest)(nil),
		(*BrokerRequest_CancelOrderRequest)(nil),
		(*BrokerRequest_ReplaceOrderRequest)(nil),
		(*BrokerRequest_SyncRequest)(nil),
		(*BrokerRequest_ClosePositionRequest)(nil),
	}
}

func _BrokerRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BrokerRequest)
	// Request
	switch x := m.Request.(type) {
	case *BrokerRequest_PlaceOrderRequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlaceOrderRequest); err != nil {
			return err
		}
	case *BrokerRequest_CancelOrderRequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelOrderRequest); err != nil {
			return err
		}
	case *BrokerRequest_ReplaceOrderRequest:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplaceOrderRequest); err != nil {
			return err
		}
	case *BrokerRequest_SyncRequest:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SyncRequest); err != nil {
			return err
		}
	case *BrokerRequest_ClosePositionRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClosePositionRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BrokerRequest.Request has unexpected type %T", x)
	}
	return nil
}

func _BrokerRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BrokerRequest)
	switch tag {
	case 2: // Request.placeOrderRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlaceOrderRequest)
		err := b.DecodeMessage(msg)
		m.Request = &BrokerRequest_PlaceOrderRequest{msg}
		return true, err
	case 3: // Request.cancelOrderRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CancelOrderRequest)
		err := b.DecodeMessage(msg)
		m.Request = &BrokerRequest_CancelOrderRequest{msg}
		return true, err
	case 6: // Request.replaceOrderRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplaceOrderRequest)
		err := b.DecodeMessage(msg)
		m.Request = &BrokerRequest_ReplaceOrderRequest{msg}
		return true, err
	case 4: // Request.syncRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncRequest)
		err := b.DecodeMessage(msg)
		m.Request = &BrokerRequest_SyncRequest{msg}
		return true, err
	case 5: // Request.closePositionRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClosePositionRequest)
		err := b.DecodeMessage(msg)
		m.Request = &BrokerRequest_ClosePositionRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BrokerRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BrokerRequest)
	// Request
	switch x := m.Request.(type) {
	case *BrokerRequest_PlaceOrderRequest:
		s := proto.Size(x.PlaceOrderRequest)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerRequest_CancelOrderRequest:
		s := proto.Size(x.CancelOrderRequest)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerRequest_ReplaceOrderRequest:
		s := proto.Size(x.ReplaceOrderRequest)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerRequest_SyncRequest:
		s := proto.Size(x.SyncRequest)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerRequest_ClosePositionRequest:
		s := proto.Size(x.ClosePositionRequest)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OrdersUpdate struct {
	Orders []*PrivateOrder `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
}

func (m *OrdersUpdate) Reset()                    { *m = OrdersUpdate{} }
func (m *OrdersUpdate) String() string            { return proto.CompactTextString(m) }
func (*OrdersUpdate) ProtoMessage()               {}
func (*OrdersUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *OrdersUpdate) GetOrders() []*PrivateOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type TradesUpdate struct {
	Trades []*PrivateTrade `protobuf:"bytes,1,rep,name=trades" json:"trades,omitempty"`
}

func (m *TradesUpdate) Reset()                    { *m = TradesUpdate{} }
func (m *TradesUpdate) String() string            { return proto.CompactTextString(m) }
func (*TradesUpdate) ProtoMessage()               {}
func (*TradesUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *TradesUpdate) GetTrades() []*PrivateTrade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type PositionsUpdate struct {
	Positions []*PrivatePosition `protobuf:"bytes,1,rep,name=positions" json:"positions,omitempty"`
}

func (m *PositionsUpdate) Reset()                    { *m = PositionsUpdate{} }
func (m *PositionsUpdate) String() string            { return proto.CompactTextString(m) }
func (*PositionsUpdate) ProtoMessage()               {}
func (*PositionsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PositionsUpdate) GetPositions() []*PrivatePosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

type BalancesUpdate struct {
	Balances []*Balances `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *BalancesUpdate) Reset()                    { *m = BalancesUpdate{} }
func (m *BalancesUpdate) String() string            { return proto.CompactTextString(m) }
func (*BalancesUpdate) ProtoMessage()               {}
func (*BalancesUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *BalancesUpdate) GetBalances() []*Balances {
	if m != nil {
		return m.Balances
	}
	return nil
}

type RequestResolutionUpdate struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Error   int32  `protobuf:"varint,2,opt,name=error" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//	*RequestResolutionUpdate_PlaceOrderResult
	//	*RequestResolutionUpdate_CancelOrderResult
	Result isRequestResolutionUpdate_Result `protobuf_oneof:"Result"`
}

func (m *RequestResolutionUpdate) Reset()                    { *m = RequestResolutionUpdate{} }
func (m *RequestResolutionUpdate) String() string            { return proto.CompactTextString(m) }
func (*RequestResolutionUpdate) ProtoMessage()               {}
func (*RequestResolutionUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type isRequestResolutionUpdate_Result interface {
	isRequestResolutionUpdate_Result()
}

type RequestResolutionUpdate_PlaceOrderResult struct {
	PlaceOrderResult *PlaceOrderResult `protobuf:"bytes,4,opt,name=placeOrderResult,oneof"`
}
type RequestResolutionUpdate_CancelOrderResult struct {
	CancelOrderResult *CancelOrderResult `protobuf:"bytes,5,opt,name=cancelOrderResult,oneof"`
}

func (*RequestResolutionUpdate_PlaceOrderResult) isRequestResolutionUpdate_Result()  {}
func (*RequestResolutionUpdate_CancelOrderResult) isRequestResolutionUpdate_Result() {}

func (m *RequestResolutionUpdate) GetResult() isRequestResolutionUpdate_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RequestResolutionUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestResolutionUpdate) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *RequestResolutionUpdate) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RequestResolutionUpdate) GetPlaceOrderResult() *PlaceOrderResult {
	if x, ok := m.GetResult().(*RequestResolutionUpdate_PlaceOrderResult); ok {
		return x.PlaceOrderResult
	}
	return nil
}

func (m *RequestResolutionUpdate) GetCancelOrderResult() *CancelOrderResult {
	if x, ok := m.GetResult().(*RequestResolutionUpdate_CancelOrderResult); ok {
		return x.CancelOrderResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestResolutionUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestResolutionUpdate_OneofMarshaler, _RequestResolutionUpdate_OneofUnmarshaler, _RequestResolutionUpdate_OneofSizer, []interface{}{
		(*RequestResolutionUpdate_PlaceOrderResult)(nil),
		(*RequestResolutionUpdate_CancelOrderResult)(nil),
	}
}

func _RequestResolutionUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestResolutionUpdate)
	// Result
	switch x := m.Result.(type) {
	case *RequestResolutionUpdate_PlaceOrderResult:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlaceOrderResult); err != nil {
			return err
		}
	case *RequestResolutionUpdate_CancelOrderResult:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelOrderResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestResolutionUpdate.Result has unexpected type %T", x)
	}
	return nil
}

func _RequestResolutionUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestResolutionUpdate)
	switch tag {
	case 4: // Result.placeOrderResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlaceOrderResult)
		err := b.DecodeMessage(msg)
		m.Result = &RequestResolutionUpdate_PlaceOrderResult{msg}
		return true, err
	case 5: // Result.cancelOrderResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CancelOrderResult)
		err := b.DecodeMessage(msg)
		m.Result = &RequestResolutionUpdate_CancelOrderResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestResolutionUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestResolutionUpdate)
	// Result
	switch x := m.Result.(type) {
	case *RequestResolutionUpdate_PlaceOrderResult:
		s := proto.Size(x.PlaceOrderResult)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestResolutionUpdate_CancelOrderResult:
		s := proto.Size(x.CancelOrderResult)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AnonymousSessionStatusUpdate struct {
	Expiration int64  `protobuf:"varint,1,opt,name=expiration" json:"expiration,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *AnonymousSessionStatusUpdate) Reset()                    { *m = AnonymousSessionStatusUpdate{} }
func (m *AnonymousSessionStatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*AnonymousSessionStatusUpdate) ProtoMessage()               {}
func (*AnonymousSessionStatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AnonymousSessionStatusUpdate) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *AnonymousSessionStatusUpdate) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SessionStatusUpdate struct {
	Initialized bool `protobuf:"varint,1,opt,name=initialized" json:"initialized,omitempty"`
	// Syncing means poller is running
	Syncing bool `protobuf:"varint,2,opt,name=syncing" json:"syncing,omitempty"`
	// Last sync is last time poller finished running
	LastSyncTime int64 `protobuf:"varint,3,opt,name=lastSyncTime" json:"lastSyncTime,omitempty"`
	// Expose error from poller
	SyncError int32 `protobuf:"varint,4,opt,name=syncError" json:"syncError,omitempty"`
}

func (m *SessionStatusUpdate) Reset()                    { *m = SessionStatusUpdate{} }
func (m *SessionStatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*SessionStatusUpdate) ProtoMessage()               {}
func (*SessionStatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SessionStatusUpdate) GetInitialized() bool {
	if m != nil {
		return m.Initialized
	}
	return false
}

func (m *SessionStatusUpdate) GetSyncing() bool {
	if m != nil {
		return m.Syncing
	}
	return false
}

func (m *SessionStatusUpdate) GetLastSyncTime() int64 {
	if m != nil {
		return m.LastSyncTime
	}
	return 0
}

func (m *SessionStatusUpdate) GetSyncError() int32 {
	if m != nil {
		return m.SyncError
	}
	return 0
}

type PermissionsUpdate struct {
	OrderTypes          []PrivateOrder_Type               `protobuf:"varint,1,rep,name=orderTypes,enum=ProtobufBroker.PrivateOrder_Type" json:"orderTypes,omitempty"`
	FundingTypes        []FundingType                     `protobuf:"varint,2,rep,name=fundingTypes,enum=ProtobufBroker.FundingType" json:"fundingTypes,omitempty"`
	Agreements          []*PermissionsUpdate_Agreement    `protobuf:"bytes,4,rep,name=agreements" json:"agreements,omitempty"`
	CurrencyPairAllowed bool                              `protobuf:"varint,5,opt,name=currencyPairAllowed" json:"currencyPairAllowed,omitempty"`
	LeverageLevels      *PermissionsUpdate_LeverageLevels `protobuf:"bytes,6,opt,name=leverageLevels" json:"leverageLevels,omitempty"`
	SupportsOrderExpiry bool                              `protobuf:"varint,7,opt,name=supportsOrderExpiry" json:"supportsOrderExpiry,omitempty"`
}

func (m *PermissionsUpdate) Reset()                    { *m = PermissionsUpdate{} }
func (m *PermissionsUpdate) String() string            { return proto.CompactTextString(m) }
func (*PermissionsUpdate) ProtoMessage()               {}
func (*PermissionsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *PermissionsUpdate) GetOrderTypes() []PrivateOrder_Type {
	if m != nil {
		return m.OrderTypes
	}
	return nil
}

func (m *PermissionsUpdate) GetFundingTypes() []FundingType {
	if m != nil {
		return m.FundingTypes
	}
	return nil
}

func (m *PermissionsUpdate) GetAgreements() []*PermissionsUpdate_Agreement {
	if m != nil {
		return m.Agreements
	}
	return nil
}

func (m *PermissionsUpdate) GetCurrencyPairAllowed() bool {
	if m != nil {
		return m.CurrencyPairAllowed
	}
	return false
}

func (m *PermissionsUpdate) GetLeverageLevels() *PermissionsUpdate_LeverageLevels {
	if m != nil {
		return m.LeverageLevels
	}
	return nil
}

func (m *PermissionsUpdate) GetSupportsOrderExpiry() bool {
	if m != nil {
		return m.SupportsOrderExpiry
	}
	return false
}

type PermissionsUpdate_Agreement struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Body string `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *PermissionsUpdate_Agreement) Reset()                    { *m = PermissionsUpdate_Agreement{} }
func (m *PermissionsUpdate_Agreement) String() string            { return proto.CompactTextString(m) }
func (*PermissionsUpdate_Agreement) ProtoMessage()               {}
func (*PermissionsUpdate_Agreement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

func (m *PermissionsUpdate_Agreement) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PermissionsUpdate_Agreement) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type PermissionsUpdate_LeverageLevels struct {
	Buy  []string `protobuf:"bytes,1,rep,name=buy" json:"buy,omitempty"`
	Sell []string `protobuf:"bytes,2,rep,name=sell" json:"sell,omitempty"`
}

func (m *PermissionsUpdate_LeverageLevels) Reset()         { *m = PermissionsUpdate_LeverageLevels{} }
func (m *PermissionsUpdate_LeverageLevels) String() string { return proto.CompactTextString(m) }
func (*PermissionsUpdate_LeverageLevels) ProtoMessage()    {}
func (*PermissionsUpdate_LeverageLevels) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 1}
}

func (m *PermissionsUpdate_LeverageLevels) GetBuy() []string {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *PermissionsUpdate_LeverageLevels) GetSell() []string {
	if m != nil {
		return m.Sell
	}
	return nil
}

type APIAccessorStatusUpdate struct {
	HasAccess    bool   `protobuf:"varint,1,opt,name=hasAccess" json:"hasAccess,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	StatusString string `protobuf:"bytes,3,opt,name=statusString" json:"statusString,omitempty"`
}

func (m *APIAccessorStatusUpdate) Reset()                    { *m = APIAccessorStatusUpdate{} }
func (m *APIAccessorStatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*APIAccessorStatusUpdate) ProtoMessage()               {}
func (*APIAccessorStatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *APIAccessorStatusUpdate) GetHasAccess() bool {
	if m != nil {
		return m.HasAccess
	}
	return false
}

func (m *APIAccessorStatusUpdate) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *APIAccessorStatusUpdate) GetStatusString() string {
	if m != nil {
		return m.StatusString
	}
	return ""
}

type BrokerUpdateMessage struct {
	// Types that are valid to be assigned to Update:
	//	*BrokerUpdateMessage_OrdersUpdate
	//	*BrokerUpdateMessage_TradesUpdate
	//	*BrokerUpdateMessage_BalancesUpdate
	//	*BrokerUpdateMessage_PositionsUpdate
	//	*BrokerUpdateMessage_RequestResolutionUpdate
	//	*BrokerUpdateMessage_AnonymousSessionStatusUpdate
	//	*BrokerUpdateMessage_PermissionsUpdate
	//	*BrokerUpdateMessage_SessionStatusUpdate
	//	*BrokerUpdateMessage_ApiAccessorStatusUpdate
	//	*BrokerUpdateMessage_AuthenticationResult
	Update isBrokerUpdateMessage_Update `protobuf_oneof:"Update"`
}

func (m *BrokerUpdateMessage) Reset()                    { *m = BrokerUpdateMessage{} }
func (m *BrokerUpdateMessage) String() string            { return proto.CompactTextString(m) }
func (*BrokerUpdateMessage) ProtoMessage()               {}
func (*BrokerUpdateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type isBrokerUpdateMessage_Update interface {
	isBrokerUpdateMessage_Update()
}

type BrokerUpdateMessage_OrdersUpdate struct {
	OrdersUpdate *OrdersUpdate `protobuf:"bytes,1,opt,name=ordersUpdate,oneof"`
}
type BrokerUpdateMessage_TradesUpdate struct {
	TradesUpdate *TradesUpdate `protobuf:"bytes,2,opt,name=tradesUpdate,oneof"`
}
type BrokerUpdateMessage_BalancesUpdate struct {
	BalancesUpdate *BalancesUpdate `protobuf:"bytes,3,opt,name=balancesUpdate,oneof"`
}
type BrokerUpdateMessage_PositionsUpdate struct {
	PositionsUpdate *PositionsUpdate `protobuf:"bytes,8,opt,name=positionsUpdate,oneof"`
}
type BrokerUpdateMessage_RequestResolutionUpdate struct {
	RequestResolutionUpdate *RequestResolutionUpdate `protobuf:"bytes,4,opt,name=requestResolutionUpdate,oneof"`
}
type BrokerUpdateMessage_AnonymousSessionStatusUpdate struct {
	AnonymousSessionStatusUpdate *AnonymousSessionStatusUpdate `protobuf:"bytes,5,opt,name=anonymousSessionStatusUpdate,oneof"`
}
type BrokerUpdateMessage_PermissionsUpdate struct {
	PermissionsUpdate *PermissionsUpdate `protobuf:"bytes,6,opt,name=permissionsUpdate,oneof"`
}
type BrokerUpdateMessage_SessionStatusUpdate struct {
	SessionStatusUpdate *SessionStatusUpdate `protobuf:"bytes,7,opt,name=sessionStatusUpdate,oneof"`
}
type BrokerUpdateMessage_ApiAccessorStatusUpdate struct {
	ApiAccessorStatusUpdate *APIAccessorStatusUpdate `protobuf:"bytes,9,opt,name=apiAccessorStatusUpdate,oneof"`
}
type BrokerUpdateMessage_AuthenticationResult struct {
	AuthenticationResult *ProtobufStream.AuthenticationResult `protobuf:"bytes,10,opt,name=authenticationResult,oneof"`
}

func (*BrokerUpdateMessage_OrdersUpdate) isBrokerUpdateMessage_Update()                 {}
func (*BrokerUpdateMessage_TradesUpdate) isBrokerUpdateMessage_Update()                 {}
func (*BrokerUpdateMessage_BalancesUpdate) isBrokerUpdateMessage_Update()               {}
func (*BrokerUpdateMessage_PositionsUpdate) isBrokerUpdateMessage_Update()              {}
func (*BrokerUpdateMessage_RequestResolutionUpdate) isBrokerUpdateMessage_Update()      {}
func (*BrokerUpdateMessage_AnonymousSessionStatusUpdate) isBrokerUpdateMessage_Update() {}
func (*BrokerUpdateMessage_PermissionsUpdate) isBrokerUpdateMessage_Update()            {}
func (*BrokerUpdateMessage_SessionStatusUpdate) isBrokerUpdateMessage_Update()          {}
func (*BrokerUpdateMessage_ApiAccessorStatusUpdate) isBrokerUpdateMessage_Update()      {}
func (*BrokerUpdateMessage_AuthenticationResult) isBrokerUpdateMessage_Update()         {}

func (m *BrokerUpdateMessage) GetUpdate() isBrokerUpdateMessage_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *BrokerUpdateMessage) GetOrdersUpdate() *OrdersUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_OrdersUpdate); ok {
		return x.OrdersUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetTradesUpdate() *TradesUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_TradesUpdate); ok {
		return x.TradesUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetBalancesUpdate() *BalancesUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_BalancesUpdate); ok {
		return x.BalancesUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetPositionsUpdate() *PositionsUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_PositionsUpdate); ok {
		return x.PositionsUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetRequestResolutionUpdate() *RequestResolutionUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_RequestResolutionUpdate); ok {
		return x.RequestResolutionUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetAnonymousSessionStatusUpdate() *AnonymousSessionStatusUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_AnonymousSessionStatusUpdate); ok {
		return x.AnonymousSessionStatusUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetPermissionsUpdate() *PermissionsUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_PermissionsUpdate); ok {
		return x.PermissionsUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetSessionStatusUpdate() *SessionStatusUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_SessionStatusUpdate); ok {
		return x.SessionStatusUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetApiAccessorStatusUpdate() *APIAccessorStatusUpdate {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_ApiAccessorStatusUpdate); ok {
		return x.ApiAccessorStatusUpdate
	}
	return nil
}

func (m *BrokerUpdateMessage) GetAuthenticationResult() *ProtobufStream.AuthenticationResult {
	if x, ok := m.GetUpdate().(*BrokerUpdateMessage_AuthenticationResult); ok {
		return x.AuthenticationResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BrokerUpdateMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BrokerUpdateMessage_OneofMarshaler, _BrokerUpdateMessage_OneofUnmarshaler, _BrokerUpdateMessage_OneofSizer, []interface{}{
		(*BrokerUpdateMessage_OrdersUpdate)(nil),
		(*BrokerUpdateMessage_TradesUpdate)(nil),
		(*BrokerUpdateMessage_BalancesUpdate)(nil),
		(*BrokerUpdateMessage_PositionsUpdate)(nil),
		(*BrokerUpdateMessage_RequestResolutionUpdate)(nil),
		(*BrokerUpdateMessage_AnonymousSessionStatusUpdate)(nil),
		(*BrokerUpdateMessage_PermissionsUpdate)(nil),
		(*BrokerUpdateMessage_SessionStatusUpdate)(nil),
		(*BrokerUpdateMessage_ApiAccessorStatusUpdate)(nil),
		(*BrokerUpdateMessage_AuthenticationResult)(nil),
	}
}

func _BrokerUpdateMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BrokerUpdateMessage)
	// Update
	switch x := m.Update.(type) {
	case *BrokerUpdateMessage_OrdersUpdate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrdersUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_TradesUpdate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TradesUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_BalancesUpdate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BalancesUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_PositionsUpdate:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PositionsUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_RequestResolutionUpdate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestResolutionUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_AnonymousSessionStatusUpdate:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AnonymousSessionStatusUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_PermissionsUpdate:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PermissionsUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_SessionStatusUpdate:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SessionStatusUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_ApiAccessorStatusUpdate:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApiAccessorStatusUpdate); err != nil {
			return err
		}
	case *BrokerUpdateMessage_AuthenticationResult:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuthenticationResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BrokerUpdateMessage.Update has unexpected type %T", x)
	}
	return nil
}

func _BrokerUpdateMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BrokerUpdateMessage)
	switch tag {
	case 1: // Update.ordersUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OrdersUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_OrdersUpdate{msg}
		return true, err
	case 2: // Update.tradesUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradesUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_TradesUpdate{msg}
		return true, err
	case 3: // Update.balancesUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BalancesUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_BalancesUpdate{msg}
		return true, err
	case 8: // Update.positionsUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PositionsUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_PositionsUpdate{msg}
		return true, err
	case 4: // Update.requestResolutionUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestResolutionUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_RequestResolutionUpdate{msg}
		return true, err
	case 5: // Update.anonymousSessionStatusUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AnonymousSessionStatusUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_AnonymousSessionStatusUpdate{msg}
		return true, err
	case 6: // Update.permissionsUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PermissionsUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_PermissionsUpdate{msg}
		return true, err
	case 7: // Update.sessionStatusUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SessionStatusUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_SessionStatusUpdate{msg}
		return true, err
	case 9: // Update.apiAccessorStatusUpdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(APIAccessorStatusUpdate)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_ApiAccessorStatusUpdate{msg}
		return true, err
	case 10: // Update.authenticationResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProtobufStream.AuthenticationResult)
		err := b.DecodeMessage(msg)
		m.Update = &BrokerUpdateMessage_AuthenticationResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BrokerUpdateMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BrokerUpdateMessage)
	// Update
	switch x := m.Update.(type) {
	case *BrokerUpdateMessage_OrdersUpdate:
		s := proto.Size(x.OrdersUpdate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_TradesUpdate:
		s := proto.Size(x.TradesUpdate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_BalancesUpdate:
		s := proto.Size(x.BalancesUpdate)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_PositionsUpdate:
		s := proto.Size(x.PositionsUpdate)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_RequestResolutionUpdate:
		s := proto.Size(x.RequestResolutionUpdate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_AnonymousSessionStatusUpdate:
		s := proto.Size(x.AnonymousSessionStatusUpdate)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_PermissionsUpdate:
		s := proto.Size(x.PermissionsUpdate)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_SessionStatusUpdate:
		s := proto.Size(x.SessionStatusUpdate)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_ApiAccessorStatusUpdate:
		s := proto.Size(x.ApiAccessorStatusUpdate)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BrokerUpdateMessage_AuthenticationResult:
		s := proto.Size(x.AuthenticationResult)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*BrokerSessionMessage)(nil), "ProtobufBroker.BrokerSessionMessage")
	proto.RegisterType((*BrokerSessionMessage_Session)(nil), "ProtobufBroker.BrokerSessionMessage.Session")
	proto.RegisterType((*BrokerSessionMessage_AnonymousTradingSession)(nil), "ProtobufBroker.BrokerSessionMessage.AnonymousTradingSession")
	proto.RegisterType((*PlaceOrderRequest)(nil), "ProtobufBroker.PlaceOrderRequest")
	proto.RegisterType((*PlaceOrderResult)(nil), "ProtobufBroker.PlaceOrderResult")
	proto.RegisterType((*CancelOrderRequest)(nil), "ProtobufBroker.CancelOrderRequest")
	proto.RegisterType((*CancelOrderResult)(nil), "ProtobufBroker.CancelOrderResult")
	proto.RegisterType((*ReplaceOrderRequest)(nil), "ProtobufBroker.ReplaceOrderRequest")
	proto.RegisterType((*ClosePositionRequest)(nil), "ProtobufBroker.ClosePositionRequest")
	proto.RegisterType((*SyncRequest)(nil), "ProtobufBroker.SyncRequest")
	proto.RegisterType((*BrokerRequest)(nil), "ProtobufBroker.BrokerRequest")
	proto.RegisterType((*OrdersUpdate)(nil), "ProtobufBroker.OrdersUpdate")
	proto.RegisterType((*TradesUpdate)(nil), "ProtobufBroker.TradesUpdate")
	proto.RegisterType((*PositionsUpdate)(nil), "ProtobufBroker.PositionsUpdate")
	proto.RegisterType((*BalancesUpdate)(nil), "ProtobufBroker.BalancesUpdate")
	proto.RegisterType((*RequestResolutionUpdate)(nil), "ProtobufBroker.RequestResolutionUpdate")
	proto.RegisterType((*AnonymousSessionStatusUpdate)(nil), "ProtobufBroker.AnonymousSessionStatusUpdate")
	proto.RegisterType((*SessionStatusUpdate)(nil), "ProtobufBroker.SessionStatusUpdate")
	proto.RegisterType((*PermissionsUpdate)(nil), "ProtobufBroker.PermissionsUpdate")
	proto.RegisterType((*PermissionsUpdate_Agreement)(nil), "ProtobufBroker.PermissionsUpdate.Agreement")
	proto.RegisterType((*PermissionsUpdate_LeverageLevels)(nil), "ProtobufBroker.PermissionsUpdate.LeverageLevels")
	proto.RegisterType((*APIAccessorStatusUpdate)(nil), "ProtobufBroker.APIAccessorStatusUpdate")
	proto.RegisterType((*BrokerUpdateMessage)(nil), "ProtobufBroker.BrokerUpdateMessage")
}

func init() { proto.RegisterFile("broker/broker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0x5b, 0x8f, 0xdb, 0x44,
	0x14, 0x76, 0x92, 0xdd, 0x4d, 0x72, 0xb2, 0x4d, 0x77, 0x27, 0x11, 0x6b, 0x85, 0x55, 0xd9, 0x1a,
	0x24, 0x2a, 0x51, 0xd2, 0x52, 0x50, 0x9f, 0xb8, 0x25, 0x4b, 0x2b, 0x57, 0x2d, 0x10, 0x66, 0x03,
	0x45, 0xbc, 0x4d, 0x9c, 0xd9, 0xd4, 0x5a, 0xc7, 0x36, 0x33, 0x76, 0xd9, 0xf0, 0x8c, 0x90, 0x78,
	0x46, 0xfc, 0x26, 0xc4, 0xef, 0xe0, 0x8f, 0xa0, 0xb9, 0x38, 0xf1, 0x65, 0xb2, 0x29, 0x4f, 0xf6,
	0x19, 0x9f, 0xef, 0x9b, 0x33, 0xe7, 0x3a, 0x86, 0xde, 0x8c, 0x45, 0x57, 0x94, 0x3d, 0x50, 0x8f,
	0x61, 0xcc, 0xa2, 0x24, 0x42, 0xdd, 0x89, 0x78, 0xcc, 0xd2, 0xcb, 0xb1, 0x5c, 0x1d, 0xf4, 0xb5,
	0x52, 0xcc, 0xfc, 0xd7, 0x24, 0xa1, 0x4a, 0x6b, 0xd0, 0xe3, 0x09, 0xa3, 0x64, 0xf9, 0x40, 0x3d,
	0xd4, 0xa2, 0xf3, 0x6f, 0x03, 0xfa, 0x0a, 0x75, 0x41, 0x39, 0xf7, 0xa3, 0xf0, 0x6b, 0xca, 0x39,
	0x59, 0x50, 0xe4, 0x42, 0x93, 0xab, 0x15, 0xbb, 0x76, 0x56, 0xbb, 0xd7, 0x79, 0x74, 0x7f, 0x58,
	0xdc, 0x65, 0x68, 0x82, 0x0d, 0xb5, 0xe8, 0x5a, 0x38, 0x83, 0xa3, 0x6b, 0x38, 0x21, 0x61, 0x14,
	0xae, 0x96, 0x51, 0xca, 0xa7, 0x8c, 0xcc, 0xfd, 0x70, 0xa1, 0xb5, 0xec, 0xba, 0x64, 0xfe, 0xf4,
	0x8d, 0x98, 0x47, 0x66, 0x0e, 0xd7, 0xc2, 0xdb, 0xe8, 0xd1, 0x00, 0x5a, 0x4b, 0xc2, 0xae, 0x68,
	0xf2, 0x6c, 0x6e, 0x37, 0xce, 0x6a, 0xf7, 0x1a, 0x78, 0x2d, 0x0f, 0x96, 0xd0, 0xcc, 0xd4, 0xde,
	0x82, 0x83, 0x94, 0x53, 0xf6, 0x6c, 0x2e, 0x4f, 0xda, 0xc6, 0x5a, 0x42, 0x36, 0x34, 0xe9, 0x75,
	0xec, 0x33, 0xca, 0xa5, 0xa1, 0x0d, 0x9c, 0x89, 0xa8, 0x0f, 0xfb, 0x49, 0x74, 0x45, 0x43, 0xc9,
	0xda, 0xc6, 0x4a, 0x90, 0xdb, 0x5d, 0x92, 0xa9, 0xfc, 0xb0, 0x27, 0x3f, 0xac, 0xe5, 0xc1, 0x15,
	0x9c, 0x8c, 0xb6, 0x5b, 0x49, 0xaf, 0xbd, 0x57, 0x24, 0x5c, 0x50, 0x6d, 0xc0, 0x5a, 0xde, 0x6c,
	0x54, 0xcf, 0x6f, 0x74, 0x07, 0x40, 0x5a, 0x42, 0x12, 0xe1, 0x44, 0x75, 0xb2, 0xdc, 0xca, 0xf8,
	0x36, 0xdc, 0xd2, 0xe4, 0xe7, 0x51, 0x78, 0xe9, 0x2f, 0x9c, 0x3f, 0x6a, 0x70, 0x3c, 0x09, 0x88,
	0x47, 0xbf, 0x65, 0x73, 0xca, 0x30, 0xfd, 0x39, 0xa5, 0x3c, 0x41, 0x8f, 0x60, 0x3f, 0x12, 0xb2,
	0x0e, 0xc3, 0x69, 0x39, 0x0c, 0x13, 0x95, 0x3e, 0x0a, 0xa3, 0x54, 0xd1, 0x97, 0x70, 0xe8, 0x05,
	0x11, 0xf7, 0xc3, 0x85, 0x5c, 0x96, 0x9b, 0xef, 0x82, 0x16, 0x10, 0xce, 0x7d, 0x38, 0xca, 0x9b,
	0xc2, 0xd3, 0x20, 0x11, 0x9e, 0x96, 0xf4, 0xeb, 0x10, 0x64, 0xa2, 0x33, 0x04, 0x74, 0x4e, 0x42,
	0x8f, 0x06, 0x05, 0xcb, 0x73, 0xfa, 0xf5, 0xa2, 0xfe, 0x87, 0x70, 0x5c, 0xd0, 0xdf, 0x41, 0xff,
	0x77, 0x0d, 0x7a, 0x98, 0xc6, 0x15, 0xd7, 0x6c, 0x45, 0xa0, 0xcf, 0xa1, 0xc3, 0x14, 0x60, 0x49,
	0xc3, 0xe4, 0x8d, 0x5c, 0x97, 0x07, 0xa0, 0x1f, 0xe0, 0x24, 0x27, 0x9e, 0xff, 0x5f, 0x5f, 0x6e,
	0x03, 0x3b, 0x8f, 0xa1, 0x2f, 0x64, 0x3a, 0x89, 0xb8, 0x2f, 0x92, 0x20, 0x3b, 0xc9, 0x1d, 0x80,
	0x58, 0x2f, 0xad, 0xbd, 0x95, 0x5b, 0x71, 0x6e, 0x41, 0xe7, 0x62, 0x15, 0x7a, 0x5a, 0xdd, 0xf9,
	0xa7, 0x01, 0xb7, 0xd4, 0xbe, 0x19, 0x41, 0x17, 0xea, 0x7e, 0xe6, 0x85, 0xba, 0x3f, 0x47, 0xdf,
	0xc1, 0x71, 0xc5, 0x5f, 0xda, 0x0d, 0x77, 0x2b, 0xa6, 0x97, 0x15, 0x5d, 0x0b, 0x57, 0xd1, 0x68,
	0x0a, 0xc8, 0xab, 0x04, 0x59, 0xbb, 0xc3, 0x29, 0x73, 0x56, 0xd3, 0xc1, 0xb5, 0xb0, 0x01, 0x8f,
	0x5e, 0x42, 0x8f, 0x55, 0x43, 0x6b, 0x1f, 0x48, 0xda, 0x77, 0xcb, 0xb4, 0x86, 0x2c, 0x70, 0x2d,
	0x6c, 0x62, 0x40, 0x5f, 0x40, 0x87, 0x6f, 0x5c, 0x26, 0x4b, 0xbd, 0xf3, 0xe8, 0xed, 0x32, 0x61,
	0xce, 0xab, 0xae, 0x85, 0xf3, 0x08, 0xf4, 0x13, 0xf4, 0x3d, 0x43, 0xac, 0xec, 0x7d, 0xc9, 0xf4,
	0x5e, 0xe5, 0xc4, 0x06, 0x5d, 0xd7, 0xc2, 0x46, 0x8e, 0x71, 0x1b, 0x9a, 0x59, 0x2c, 0xbf, 0x82,
	0x43, 0x69, 0x37, 0xff, 0x3e, 0x9e, 0x93, 0x84, 0xa2, 0x4f, 0xe0, 0x40, 0x66, 0x31, 0xb7, 0x6b,
	0x67, 0x8d, 0x9d, 0x99, 0xa6, 0x75, 0x05, 0x8b, 0x68, 0x58, 0x34, 0xc7, 0x92, 0x48, 0x79, 0x07,
	0x8b, 0x04, 0x61, 0xad, 0xeb, 0x4c, 0xe0, 0x76, 0x66, 0x69, 0x46, 0xf4, 0x19, 0xb4, 0xb3, 0x3c,
	0xcc, 0xb8, 0xde, 0xd9, 0xc2, 0xb5, 0x3e, 0xe4, 0x06, 0xe1, 0x3c, 0x85, 0xee, 0x98, 0x04, 0x22,
	0xec, 0x1b, 0xcb, 0x5a, 0x33, 0xbd, 0xa2, 0xf9, 0xec, 0xca, 0x64, 0xd1, 0xdf, 0xf1, 0x5a, 0xd3,
	0xf9, 0xbd, 0x0e, 0x27, 0xda, 0x63, 0x98, 0xf2, 0x28, 0x48, 0x05, 0xbd, 0x66, 0x2c, 0xe7, 0x7e,
	0x1f, 0xf6, 0x29, 0x63, 0x91, 0xea, 0x98, 0xfb, 0x58, 0x09, 0xa2, 0x59, 0x2c, 0xd5, 0x90, 0xd2,
	0xf3, 0x20, 0x13, 0xd1, 0x37, 0x70, 0x14, 0x97, 0x7a, 0x9d, 0x4e, 0x97, 0xb3, 0x9b, 0x4a, 0x45,
	0xe8, 0xb9, 0x16, 0xae, 0x60, 0x45, 0xed, 0x79, 0xe5, 0xee, 0xa6, 0xb3, 0xe6, 0xee, 0x8d, 0x75,
	0xa2, 0x19, 0xab, 0xe8, 0x71, 0x0b, 0x0e, 0xd4, 0x9b, 0x33, 0x85, 0xd3, 0xf5, 0x88, 0xd2, 0xe3,
	0xe3, 0x22, 0x21, 0x49, 0x9a, 0xb9, 0xb7, 0x38, 0x75, 0x6a, 0xe5, 0xa9, 0x63, 0x9e, 0x55, 0xce,
	0x9f, 0x35, 0xe8, 0x99, 0xd8, 0xce, 0xa0, 0xe3, 0x87, 0x7e, 0xe2, 0x93, 0xc0, 0xff, 0x95, 0x2a,
	0x1f, 0xb7, 0x70, 0x7e, 0x49, 0xb8, 0x55, 0x14, 0x8d, 0x1f, 0x2e, 0x24, 0x63, 0x0b, 0x67, 0x22,
	0x72, 0xe0, 0x30, 0x20, 0x3c, 0x11, 0x15, 0x36, 0xf5, 0x97, 0x54, 0x4f, 0xc0, 0xc2, 0x1a, 0x3a,
	0x85, 0xb6, 0x50, 0x7f, 0x22, 0xc3, 0xb5, 0x27, 0xc3, 0xb5, 0x59, 0x70, 0xfe, 0xda, 0x83, 0xe3,
	0x09, 0x65, 0x4b, 0x5f, 0x1a, 0x96, 0xd9, 0xf4, 0x04, 0x40, 0x26, 0xfd, 0x74, 0x15, 0xeb, 0x14,
	0xea, 0x1a, 0x7a, 0x5a, 0xae, 0x48, 0x86, 0x42, 0x73, 0x5c, 0x3f, 0xb2, 0x70, 0x0e, 0x88, 0xce,
	0xe1, 0xf0, 0x32, 0x0d, 0xc5, 0x88, 0x57, 0x44, 0x75, 0x49, 0x54, 0x69, 0x10, 0x4f, 0x37, 0x3a,
	0x92, 0xa2, 0x00, 0x42, 0xcf, 0x01, 0xc8, 0x82, 0x51, 0xd9, 0xe8, 0xb9, 0xbd, 0x27, 0xd3, 0xf9,
	0x83, 0x8a, 0x2d, 0xe5, 0x23, 0x0c, 0x47, 0x19, 0x06, 0xe7, 0xe0, 0xe8, 0x21, 0xf4, 0xbc, 0x94,
	0x31, 0x1a, 0x7a, 0xab, 0x09, 0xf1, 0xd9, 0x28, 0x08, 0xa2, 0x5f, 0xe8, 0x5c, 0x66, 0x4e, 0x0b,
	0x9b, 0x3e, 0xa1, 0x1f, 0xa1, 0x1b, 0xd0, 0xd7, 0x94, 0x91, 0x05, 0x7d, 0x41, 0x5f, 0xd3, 0x80,
	0xeb, 0xbe, 0xf9, 0x70, 0xb7, 0x09, 0x2f, 0x0a, 0x38, 0x5c, 0xe2, 0x11, 0xb6, 0xf0, 0x34, 0x8e,
	0x23, 0x96, 0x70, 0xe9, 0xc3, 0x27, 0x22, 0x83, 0x56, 0x76, 0x53, 0xd9, 0x62, 0xf8, 0x34, 0xf8,
	0x08, 0xda, 0xeb, 0x63, 0xa1, 0x23, 0x68, 0x5c, 0xd1, 0x95, 0xae, 0x49, 0xf1, 0x8a, 0x10, 0xec,
	0xcd, 0xa2, 0xf9, 0x4a, 0xa7, 0x9d, 0x7c, 0x1f, 0x3c, 0x86, 0x6e, 0xd1, 0x0c, 0x81, 0x9b, 0xa5,
	0x2b, 0x19, 0xd4, 0x36, 0x16, 0xaf, 0x02, 0xc7, 0x69, 0x10, 0xc8, 0xf0, 0xb4, 0xb1, 0x7c, 0x77,
	0x38, 0x9c, 0x8c, 0x26, 0xcf, 0x46, 0x9e, 0x47, 0x39, 0x8f, 0x58, 0x21, 0x61, 0x4f, 0xa1, 0xfd,
	0x8a, 0x70, 0xf5, 0x49, 0xa7, 0xeb, 0x66, 0x41, 0xdc, 0x21, 0xb9, 0xd4, 0xd6, 0xad, 0x41, 0x4b,
	0x22, 0x55, 0xd5, 0xdb, 0x45, 0xc2, 0x44, 0x26, 0xab, 0x06, 0x51, 0x58, 0x73, 0x7e, 0x6b, 0x42,
	0x4f, 0x79, 0x53, 0x6d, 0x95, 0x5d, 0xc1, 0xc7, 0x70, 0x18, 0xe5, 0xfa, 0xb7, 0xbe, 0x87, 0x57,
	0xfa, 0x6d, 0xbe, 0xc7, 0xbb, 0x16, 0x2e, 0x60, 0x04, 0x47, 0x92, 0xeb, 0xde, 0xdb, 0xee, 0x2b,
	0xf9, 0x0e, 0x2f, 0x38, 0xf2, 0x18, 0xe4, 0x42, 0x77, 0x56, 0xe8, 0xb4, 0x7a, 0x34, 0xdf, 0xd9,
	0xd6, 0x5d, 0xd7, 0x3c, 0x25, 0x1c, 0x7a, 0x0e, 0xb7, 0xe3, 0xe2, 0x14, 0xb0, 0x5b, 0x92, 0xaa,
	0xda, 0xf8, 0x8b, 0x6a, 0xae, 0x85, 0xcb, 0x48, 0xe4, 0x89, 0x9b, 0x94, 0xb1, 0x6f, 0xeb, 0x1e,
	0xfb, 0x7e, 0x75, 0xc6, 0x1b, 0xd5, 0xc5, 0x2f, 0xc4, 0x16, 0x26, 0xc4, 0xe0, 0x94, 0xdc, 0xd0,
	0x14, 0x75, 0xf3, 0xad, 0xfc, 0x1b, 0xdd, 0xd4, 0x48, 0x5d, 0x0b, 0xdf, 0xc8, 0x29, 0x6f, 0x58,
	0xe5, 0xaa, 0xd2, 0xe5, 0x77, 0x77, 0x67, 0xf9, 0xc9, 0x1b, 0x56, 0xa5, 0xb3, 0xbd, 0x84, 0x1e,
	0x37, 0x58, 0xdf, 0x34, 0xdf, 0x85, 0xcc, 0x46, 0x9b, 0x18, 0x44, 0x10, 0x48, 0xec, 0x9b, 0x0a,
	0xc6, 0x6e, 0x9b, 0x83, 0xb0, 0xa5, 0xbe, 0xe4, 0x7f, 0x9c, 0x99, 0x49, 0xdc, 0x97, 0x48, 0x9a,
	0xbc, 0xa2, 0x61, 0xe2, 0x7b, 0x44, 0x5d, 0x76, 0xe4, 0xe4, 0x83, 0xd2, 0x7d, 0xe9, 0x42, 0xfd,
	0xd9, 0x8e, 0x0c, 0xba, 0xe2, 0xbe, 0x64, 0xe2, 0x10, 0xf3, 0x4f, 0xed, 0x32, 0x3b, 0x90, 0x7f,
	0xc4, 0x1f, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xc6, 0x56, 0xb4, 0x63, 0x0f, 0x00, 0x00,
}
